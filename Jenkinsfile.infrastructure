// Jenkinsfile.infrastructure
// Infrastructure Management Pipeline - Manual Terraform Operations

pipeline {
    agent any
    
    parameters {
        choice(
            name: 'TERRAFORM_ACTION',
            choices: ['none', 'plan', 'apply', 'destroy'],
            description: 'Select Terraform action (apply/destroy require manual trigger)'
        )
        booleanParam(
            name: 'FORCE_TERRAFORM',
            defaultValue: false,
            description: 'Force Terraform execution (bypass safety checks)'
        )
        string(
            name: 'DB_PASSWORD',
            defaultValue: '',
            description: 'Database password (required for apply/destroy)'
        )
    }
    
    environment {
        AWS_DEFAULT_REGION = 'eu-central-1'
        
        // Database password from Jenkins credentials
        TF_VAR_db_password = "${params.DB_PASSWORD}"
        
        // AWS configuration
        TF_VAR_aws_region = 'eu-central-1'
        TF_VAR_project_name = 'hello-world'
        TF_VAR_environment = 'production'
        
        // DOMAIN CONFIGURATION - This was missing before!
        TF_VAR_domain_name = 'hello-world.stoycho.online'
        TF_VAR_hosted_zone_name = 'stoycho.online'
        TF_VAR_private_zone = 'false'
        
        // Network configuration
        TF_VAR_vpc_cidr = '10.0.0.0/16'
        
        // Database configuration
        TF_VAR_db_instance_class = 'db.t3.micro'
        TF_VAR_db_name = 'hello_world'
        TF_VAR_db_username = 'app_user'
        
        // ECS configuration
        TF_VAR_ecs_cpu = '256'
        TF_VAR_ecs_memory = '512'
        TF_VAR_ecs_desired_count = '1'
        
        // Tags
        TF_VAR_common_tags = '{Project="hello-world-microservice",Environment="production",ManagedBy="terraform",Owner="stoycho"}'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                echo "üèóÔ∏è Infrastructure Management Pipeline"
                echo "Selected action: ${params.TERRAFORM_ACTION}"
                echo "Domain: hello-world.stoycho.online"
            }
        }
        
        stage('Validate Parameters') {
            when {
                anyOf {
                    expression { params.TERRAFORM_ACTION == 'apply' }
                    expression { params.TERRAFORM_ACTION == 'destroy' }
                }
            }
            steps {
                script {
                    if (!params.DB_PASSWORD) {
                        error("‚ùå DB_PASSWORD parameter is required for ${params.TERRAFORM_ACTION}")
                    }
                    
                    if (!params.FORCE_TERRAFORM) {
                        echo "‚ö†Ô∏è SAFETY CHECK: This will ${params.TERRAFORM_ACTION} your infrastructure!"
                        echo "üí° If you're sure, re-run with FORCE_TERRAFORM=true"
                        error("Safety check failed - use FORCE_TERRAFORM=true to proceed")
                    }
                    
                    echo "‚úÖ Safety checks passed for ${params.TERRAFORM_ACTION}"
                    echo "üåê Will create Route53 zone for: hello-world.stoycho.online"
                }
            }
        }
        
        stage('Terraform Init') {
            when {
                not { expression { params.TERRAFORM_ACTION == 'none' } }
            }
            steps {
                dir('terraform') {
                    sh '''
                        echo "üîß Initializing Terraform..."
                        terraform init
                        terraform validate
                        
                        echo "üìã Terraform variables being used:"
                        echo "  Domain Name: $TF_VAR_domain_name"
                        echo "  Hosted Zone: $TF_VAR_hosted_zone_name"
                        echo "  Project: $TF_VAR_project_name"
                        echo "  Environment: $TF_VAR_environment"
                        
                        echo "‚úÖ Terraform initialized and validated"
                    '''
                }
            }
        }
        
        stage('Terraform Plan') {
            when {
                anyOf {
                    expression { params.TERRAFORM_ACTION == 'plan' }
                    expression { params.TERRAFORM_ACTION == 'apply' }
                }
            }
            steps {
                dir('terraform') {
                    sh '''
                        echo "üìã Creating Terraform plan..."
                        terraform plan -out=tfplan
                        
                        echo "üìä Plan summary (Route53 should appear if domain variables are set):"
                        terraform show -no-color tfplan | grep -E "(route53|domain)" || echo "No Route53 resources found in plan"
                        
                        echo ""
                        echo "üìÑ Full plan summary:"
                        terraform show -no-color tfplan | head -50
                    '''
                }
            }
        }
        
        stage('Terraform Apply') {
            when {
                expression { params.TERRAFORM_ACTION == 'apply' }
            }
            steps {
                dir('terraform') {
                    sh '''
                        echo "üöÄ Applying Terraform changes..."
                        terraform apply -auto-approve tfplan
                        
                        echo ""
                        echo "üì§ Terraform outputs:"
                        terraform output
                        
                        echo ""
                        echo "üåê ROUTE53 NAME SERVERS (if created):"
                        if terraform output route53_name_servers >/dev/null 2>&1; then
                            echo "‚úÖ Route53 hosted zone created!"
                            echo "üìã Update your domain registrar with these name servers:"
                            terraform output route53_name_servers
                            echo ""
                            echo "‚ö†Ô∏è IMPORTANT: You must update your domain registrar's name servers"
                            echo "   with the values above for hello-world.stoycho.online to work!"
                        else
                            echo "‚ö†Ô∏è No Route53 name servers found in output"
                        fi
                        
                        echo ""
                        echo "‚úÖ Infrastructure deployment completed!"
                    '''
                }
            }
        }
        
        # ... rest of the stages remain the same
    }